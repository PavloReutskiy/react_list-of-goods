{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reverce","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","visibleGoods","goods","console","log","getReorderedGoods","sort","goodA","goodB","localeCompare","length","reverse","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,0GAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuBE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,eAAiB,WACf,EAAKD,SAAS,CAAEJ,SAAUJ,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEJ,SAAUJ,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EAzCH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENS,EAAY,YAAOC,GAKzB,OAFAC,QAAQC,IAAId,EAAUE,GAEfS,EAgCgBI,CAAkBlB,EAAiBa,KAAKX,OAmB7D,OAjBAY,EAAaK,MAAK,SAACC,EAAOC,GACxB,OAAQlB,GACN,KAAKJ,EAASU,SACZ,OAAOW,EAAME,cAAcD,GAE7B,KAAKtB,EAASY,OACZ,OAAOS,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITlB,GACFS,EAAaU,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASd,KAAKL,eACdiB,UAAWG,IACT,iBACA,CACE,WAAYf,KAAKX,MAAMC,WAAaJ,EAASU,WANnD,iCAaA,wBACEiB,KAAK,SACLC,QAASd,KAAKH,aACde,UAAWG,IACT,oBACA,CACE,WAAYf,KAAKX,MAAMC,WAAaJ,EAASY,SANnD,4BAaA,wBACEe,KAAK,SACLC,QAASd,KAAKP,QACdmB,UAAWG,IACT,oBACA,CACE,YAAcf,KAAKX,MAAMG,aAN/B,qBAaCF,IAAaJ,EAASK,MAAQC,EAC7B,wBACEqB,KAAK,SACLC,QAASd,KAAKD,MACda,UAAU,4BAHZ,mBAOE,QAGN,6BACE,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAxGvB,GAAyBC,IAAMC,WCtC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.24d13608.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverce = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    visibleGoods.sort((goodA, goodB) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return goodA.localeCompare(goodB);\n\n        case SortType.LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabet}\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': this.state.sortType !== SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverce}\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': (!this.state.isReversed),\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {sortType !== SortType.NONE || isReversed ? (\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          ) : null}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}